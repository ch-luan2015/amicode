

//Khai bao
// Khai bao list co phieu dang giu
Myasset = ParamStr("My Asset","EIB,24.7,22.3,24.8|VCG,27.9,26.3,27.5|KDH,36.4,35.05");
hhvv = HighestVisibleValue( V );
minv = -hhvv / 50;
upday = C > Ref( C, -1 );
///////////////////////////////////////////////////
global IDset;
if(typeof(IDset)=="undefined") IDset = 0;

//Bo Formatted text output sample via low-level gfxfunctions

CellHeight = Param("Cell Height",22,0,100,1);
CellWidth = Param("Cell Width",79,0,200,1);
start_x = Param("Vi tri Table X",0,0,2000,1);
start_y = Param("Vi tri Table Y",23,0,500,1);
BtnOffsetXY = 1;
x1= start_x;
y1= start_y;
y2=y1 + CellHeight;
x2 = x1 + CellWidth;
col = Param("col",5,1,10,1);

function PointInside(x0, y0, x, y, width, height) {
    global _x0, _y0;
    x = x+_x0; y = y+_y0;
    x0 = x0+_x0; y0 = y0+_y0;
    return ((x0 >= x) && (y0 >= y) && (x0 <= (x+width)) && (y0 <= (y+height)));
}
_cursorMouseButtons = GetCursorMouseButtons();
DT_CENTER = 1; DT_VCENTER = 4 | 32;

function LeftClickInside(x, y, width, height) {
    global _cursorMouseButtons, _x0, _y0;
    local px, py, res;
 
    // x = x+_x0; y = y+_y0;
    res = False;
    if (_cursorMouseButtons & 8) { // click
        px = GetCursorXPosition(1);
        py = GetCursorYPosition(1);
        res = PointInside(px, py, x, y, width, height);
    }
    return res;
}

global IDset;
if( typeof( IDset ) == "undefined" ) IDset = 0;

//GuiButton
function GuiButtonTrigger(ButtonName,x,y,width,height){

GuiButton(ButtonName,++IDset,x,y,width,height,1);

id = GuiGetEvent(0,0);
event = GuiGetEvent(0,1);
clickevent = event == 1;
ButtonClicked = id == IDset && clickevent;

return ButtonClicked;
}
click = GetCursorMouseButtons() == 9;
Px = GetCursorXPosition( 1 );
Py = GetCursorYPosition( 1 );

GfxSetBkMode( 1 );

// Bo thuc thi procedure
procedure GfxLabel(text, x, y, width, height, format) {
    GfxSelectFont( "Arial", CellHeight/3.2, 600 );
    GfxSetTextColor(colorYellow);
    GfxDrawText( text, x, y, x+width, y+height, format | DT_VCENTER );
}

procedure SetOrigin(x0, y0) {
    global _x0, _y0;
    _x0 = x0; _y0 = y0;
}
procedure GfxSetColors(fgColor, bgColor) {
    GfxSetTextColor(fgColor); GfxSetBkColor(bgColor);
    GfxSelectPen(fgColor); GfxSelectSolidBrush(bgColor);
}

function GfxGetState(id) {
    return Nz(StaticVarGet("GfxState"+id+GetChartID()), 0);
}
procedure GfxSetState(id, val) {
    StaticVarSet("GfxState"+id+GetChartID(), val);
}


function GfxHTabs(id, headers, headheight, x, y, width, height, colorfg, colorbg) {
    local px,choice,na,i,G,header,w, wi, prevwi;
 
    choice = GfxGetState(id);
    GfxSetColors(colorfg, colorbg);
 
    for(G = 0; (header = StrExtract(headers,G)) != ""; ++G) {};
    w = width/G; wi = x; prevwi = x;
    if (LeftClickInside(x,y,width,headheight)) {
        px = GetCursorXPosition( 1 );
        // choice = floor((px - x)/w);
        // wi = x; prevwi = x;
        for(i = 0; (header = StrExtract(headers,i)) != ""; ++i) {
            wi = wi + (width+5)/(StrCount(headers, ",")+1);
            if ((px > prevwi) && (px < wi))  { choice = i; break; }
        }
        GfxSetState(id, choice); // StaticVarSet(na, choice);
    }

    GfxSetBkMode(1);
    // Draw Zone & Tabs
    wi = x; prevwi = x;
    for(i = 0; (header = StrExtract(headers,i)) != ""; ++i) {
        wi = wi + (width+5)/(StrCount(headers, ",")+1);;
        //GfxSelectPen(colorLightYellow,2);
        // GfxSelectSolidBrush(colorbg);
        GfxRoundRect(prevwi,y,wi,y+headheight+5,5,5);
        if (i != choice) {
         
            GfxRoundRect(prevwi,y,wi,y+headheight+5,5,5);
            GfxSelectSolidBrush( colorbg );
        } else {
            wic = wi; prevwic = prevwi;
        }
        GfxSelectFont( "Arial", CellHeight/2.9, 600 );
        GfxDrawText(header, prevwi, y, wi, y+headheight+5, 1|4|32);
        prevwi = wi;
    }

    return choice;
}

///////////////////////////////////////////////////
//Create Table
//Header
///////////////////////////////////////////////////
GfxSelectFont("Arial",CellHeight/2);
GfxSelectSolidBrush(colorGreen);
GfxRoundRect(x1, y1-3, x1 + CellWidth*col+3, y1 + CellHeight*2+3,15,15);
GfxSetTextColor(colorYellow);
GfxSetBkMode(1);//set transparent mode 
dt = SelectedValue(DateTime());

// khai bao vnindex
index_fc = Foreign("Vnindex","Close");
index_rfc = WriteVal(ROC(index_fc,1),5.2);
index_chg = index_fc - Ref(index_fc,-1);
//vni color
colorindex = IIf(index_fc>Ref(index_fc,-1),colorbrightGreen,IIf(index_fc == Ref(index_fc,-1),colorGold,colorRed));
GfxSetTextColor(colorindex[BarCount-1]);
GfxSelectFont("arial",CellHeight/2.3,500);
GfxDrawText( "VNINDEX " +index_fc+" "+index_rfc+"%"+"\n"+DateTimeToStr( dt[BarCount-1],1 )+" ",x1+BtnOffsetXY, y1, x1 + CellWidth*2+10,y1 + CellHeight*2, 1 );

//Tao ON|OFF button
id = GuiGetEvent(0,0);
event = GuiGetEvent(0,1);
MyChartID = GetChartID();
ToggleButton = Nz( StaticVarGet( "ToggleButton" + MyChartID ));
GuiButtonTrigger( "On", x1+CellWidth*col-45, y1+CellHeight/2, 40, 30 );
GuiSetColors(IDset,IDset,2,colorWhite, colorGreen, colorYellow, colorWhite, colorGreen, colorYellow, colorGold, colorDarkTeal, colorYellow );


//Draw Table after click
///////////////////////////////////////////////////
GfxSelectFont( "Arial",CellHeight/3.2 );

//DMDT
function DMDT(TickerList,text,_x0,_y0,CellWidth,CellHeight){
  GfxSelectSolidBrush(colorDarkGreen);
    sym_num = StrCount(tickerlist, "|")+1;
    GfxRoundRect(_x0, _y0+10, _x0 + CellWidth*col+5, _y0+CellHeight*(sym_num+2)+10,15,15);
    GfxLabel(text,_x0, _y0+10, CellWidth*col,CellHeight,1);
    
     
    for ( i = 0; i< sym_num; i++ )
    {
    list = StrExtract( Myasset, i, '|' );

    symbol = StrExtract( list, 0, ',' ) ;
    Giamua = StrExtract( list, 1, ',' ) ;
    Stoploss = StrExtract( list, 2, ',' ) ;
    Target = StrExtract( list, 3, ',' ) ;
 
    SetForeign(symbol);
    fC = close;
    rfc = ROC(fc,1);
    RestorePriceArrays();
    fC1 = LastValue(fC);
    rfc1 = LastValue(rfc);
    PnL = (fC1 - StrToNum(giamua))/StrToNum(giamua)*100;
 
    Cutloss = fC1 < StrToNum(Stoploss);
    takeprofit = fC1 > StrToNum(Target);
 
    if (fC1 < StrToNum(Stoploss))
        color = colorRed;
        else if (fC1 >= StrToNum(Stoploss) AND fC1 <= StrToNum(giamua))
            color = colorOrange;
            else if (fC1 <= StrToNum(Target) AND  fC1 > StrToNum(giamua))
                color = colorGreen;
                    else if (fC1 > StrToNum(Target) )
                        color = ColorRGB(249,4,249);
     
            textname=symbol;
            textgia=WriteIf(fC1<10,"0"+WriteVal(fC1,1.2),WriteVal(fC1,1.2));
            //mauneno=ColorBlend( colorLavender, colorLavender, 0 );
            GfxSelectFont( "Arial", CellHeight/3.2, 500 );
            GfxSetTextColor( colorGold);
            GfxDrawText("Ticker",_x0   , _y0 + 1 * cellHeight +  5, _x0+cellWidth*col/6, 3 * cellHeight+_y0 +5, 1);
            GfxDrawText("Gia Mua",_x0 +cellWidth*col/6 , _y0 + 1 * cellHeight +  5, _x0+cellWidth*col/3, 3 * cellHeight+_y0 +5, 1);
            GfxDrawText("Stoploss",_x0 +cellWidth*col/3  , _y0 + 1 * cellHeight +  5, _x0 +cellWidth*col/2, 3 * cellHeight+_y0 +5, 1);
            GfxDrawText("Price",_x0 +cellWidth*col/2 ,_y0 + 1* cellHeight +  5, _x0 +cellWidth*col/3*2, 6 * cellHeight+_y0 +5 , 1);
            GfxDrawText("Target",_x0 +cellWidth*col/3*2  , _y0 + 1 * cellHeight +  5, _x0 +cellWidth*col/6*5, 3 * cellHeight+_y0 +5, 1);
            GfxDrawText("R - R %",_x0 +cellWidth*col/6*5 ,_y0 + 1 * cellHeight +  5, _x0 + cellWidth*col, 3 * cellHeight+_y0 +5 ,1);           
            GfxSelectSolidBrush(color);
            GfxRoundRect(_x0,_y0 + (i+2) * cellHeight+3,_x0+cellWidth*col, (i+3) * cellHeight+_y0 +4,15,15);
            if ( px > _x0 AND px<_x0+cellWidth*col AND py> _y0 + (i+2) * cellHeight+3 AND py < (i+3) * cellHeight+_y0 +3 AND Click )    {
            AB = CreateObject( "Broker.Application" );
            doc = AB.ActiveDocument;
            doc.Name = symbol;
            }
            GfxSetTextColor( colorBlack);
            GfxDrawText(textname,_x0   , _y0 + (i+2) * cellHeight +  5, _x0+cellWidth*col/6, (i+3) * cellHeight+_y0 +5, 1);
            GfxDrawText(giamua,_x0 +cellWidth*col/6 , _y0 + (i+2) * cellHeight +  5, _x0+cellWidth*col/3, (i+3) * cellHeight+_y0 +5, 1);
            GfxDrawText(stoploss,_x0 +cellWidth*col/3  , _y0 + (i+2) * cellHeight +  5, _x0 +cellWidth*col/2, (i+3) * cellHeight+_y0 +5, 1);

            GfxDrawText(textgia,_x0 +cellWidth*col/2 ,_y0 + (i+2) * cellHeight +  5, _x0 +cellWidth*col/3*2, (i+3) * cellHeight+_y0 +5 , 1);
            GfxDrawText(target,_x0 +cellWidth*col/3*2  , _y0 + (i+2) * cellHeight +  5, _x0 +cellWidth*col/6*5, (i+3) * cellHeight+_y0 +5, 1);
         
            GfxDrawText(StrFormat( "%s  %.1f%%", "  ",Pnl),_x0 +cellWidth*col/6*5 ,_y0 + (i+2) * cellHeight +  5, _x0 + cellWidth*col, (i+3) * cellHeight+_y0 +5 ,1);
     
     
    }
}

procedure GfxHT(x,y){
 SetOrigin(x1,y1+CellHeight*3);
 G = GfxHTabs("HTab1", "DANH MUC", 30, _x0, _y0-CellHeight+4, CellWidth*col, CellHeight, colorWhite, colorGrey40);
 
 
  DMDT(Myasset," DANH MUC DAU TU",_x0,_y0,CellWidth,CellHeight);
  //watchlist(mywl,"DANH MUC THEO DOI",_x0,_y0+CellHeight*asset_count+2*CellHeight,CellWidth,CellHeight);
}

//Event Control button quen click
if( id == IDset AND event == 1 )  // If ToggleButton is clicked
{
    if( ToggleButton ) StaticVarSet( "ToggleButton" + MyChartID, ToggleButton = 0, 0 );
    else  StaticVarSet( "ToggleButton" + MyChartID, ToggleButton = 1, 0 );
}

if( ToggleButton )
{
 
    GuiSetText( "On", IDset );
    GfxHT(x1,y1+CellHeight*3);
}

else
{
GuiSetText( "Off", IDset );
GuiSetColors(IDset,IDset,1,colorWhite, colorRed, colorYellow, colorWhite, colorGreen, colorYellow, colorGold, colorDarkTeal, colorYellow );
}


///////////////////////////////////////////////////
//1. Them chart vao do thi
_SECTION_BEGIN( "Price Chart" );
GraphLabelDecimals = 2;
SetChartOptions( 0, chartShowArrows | chartShowDates );

//Type Chart
TypeofPrice = ParamList( "Type of Price", "Candle Stick,Bar Chart", 0 );

switch( TypeofPrice )
{
case "Candle Stick":
    upcolor = ParamColor( "Up color", colorWhite );
    downcolor = ParamColor( "Down color", colorBlack );
    barcolor = ParamColor( "Bar color", colorBlack );
    SetBarFillColor( IIf( C > O, upcolor, downcolor ) );
    PlotOHLC( Open, High, Low, Close, " ", barcolor, styleCandle + styleNoTitle, minv, hhvv * 9 );
    GraphXSpace = 15;
    break;

case "Bar Chart":
    BarColor = IIf( C > Ref( C, -1 ), ColorRGB( 46, 82, 173 ), ColorRGB( 238, 82, 160 ) );
    PlotOHLC( Close,  High,  Low,  Close, "", BarColor, styleBar + styleThick, minv, hhvv * 9, 0, 0, 2 );

    break;


}

_SECTION_END();

///////////////////////////////////////////////////
// 2. Them EMA vao do thi
_SECTION_BEGIN( "EMA" );

ema1 = Param( "Chu Ky", 21, 1, 200, 1 );
Plot( EMA( C, ema1 ), "EMA" + ema1, colorRed, styleThick );

_SECTION_END();

//////////////////////////////////////////////////

_SECTION_BEGIN( "Volume" );
//Khong phan biet hoa thuong
//Them volume vao do thi
Vdn = IIf( C < Ref( C, -1 ), V, 0 );
Vup = IIf( C > Ref( C, -1 ), V, 0 );
hvup10 = HHV( vup, 10 );
hv10 = HHV( vdn, 10 );
VAV = MA( V, Param( "TB Vol", 30, 1, 200, 1 ) );

TypeofVol = ParamList( "Type of Volume", "Pivot Pocket, Standard", 0 );

switch( TypeofVol )
{



case "Pivot Pocket":
    color = IIf( C > Ref( C, -1 ) AND V < hv10, ParamColor( "Volume up", colorGreen ),
                 IIf( C > Ref( C, -1 ) AND V > hv10, ParamColor( "Pivot Pocket", colorBrightGreen ),
                      IIf( C < Ref( C, -1 ) AND V > hvup10, ParamColor( "Max Volumn down", ColorRGB( 0, 253, 251 ) ), ParamColor( "Volume down", colorred ) ) ) );

    break;

case "Standard":
    color = IIf( C >= Ref( C, -1 ), ParamColor( "Volume up", colorGreen ), ParamColor( "Volume down", colorred ) );


    break;

}

//Plot Volume and Caculator Vol 30

SetBarFillColor( color );
Plot( V, _DEFAULT_NAME(), ParamColor( "color Volume", colorWhite ), styleArea | styleOwnScale | styleNoLabel, minv, hhvv * 9 );
CHANGE = ( ( C - Ref( C, -1 ) ) / Ref( C, -1 ) ) * 100;
Plot( VAV, "Vol TB 30 Day", colorBlue, styleLine | styleOwnScale | styleNoLabel, minv, hhvv * 7, 0, 10 );

_SECTION_END();


